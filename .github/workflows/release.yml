name: Create a production release

on:
  pull_request:
    types: [closed]
    branches: [master]

jobs:
  build:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true

    strategy:
      matrix:
        node-version: [12.x]

    steps:
      - uses: actions/checkout@v2
        with:
          ref: master

      - name: Fetch everything
        run: |
          git fetch --prune --unshallow
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: |
          npm install -g conventional-recommended-bump
          npm install -g conventional-changelog-cli
          npm install -g conventional-changelog-angular
          npm install -g conventional-github-releaser
          npm install -g semver
      - name: Create changelog
        run: |
          getNewTag()
          {
            local  __resultvar=$1
            local lastTag
            lastTag="$(git describe --tags `git rev-list --tags --max-count=1`)"
            local exitCode=$?
            if [ $exitCode = "128" ]; then
              lastTag="v0.0.0"
            fi
            local bump=$(conventional-recommended-bump -p angular -v  | head -n 1)
            local newVersion="v$(semver -i $bump $lastTag)"
            if [[ $newVersion = "v" ]]; then
              newVersion="v1.0.0"
            fi
            if [[ "$__resultvar" ]]; then
              eval $__resultvar="'$newVersion'"
            else
              echo "$newVersion"
            fi
          }
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          conventional-changelog -p angular -i CHANGELOG.md -s && git add CHANGELOG.md && git commit -m 'docs: Update changelog file'
          git tag $(getNewTag)
      - name: Push changes on master
        uses: ad-m/github-push-action@master
        with:
          branches: [master, alpha, dev, staging]
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Push tags
        uses: ad-m/github-push-action@master
        with:
          branch: master
          github_token: ${{ secrets.GITHUB_TOKEN }}
          tags: true

      - name: Create release
        run: |
          export CONVENTIONAL_GITHUB_RELEASER_TOKEN="${{ secrets.GITHUB_TOKEN }}"
          conventional-github-releaser -p angular
      - name: Create Pull Request
        uses: repo-sync/pull-request@v2
        with:
          source_branch: "master"
          destination_branch: "production"
          pr_title: "Release $(git describe --tags `git rev-list --tags --max-count=1`)"
          pr_body: ":crown: *Automated PR from release*"
          github_token: ${{ secrets.GITHUB_TOKEN }}
